/**
 * Логика кэша чата.
 * @constructor
 */
LogicChatCache = function () {

    var cache = [];

    //@todo вынести в отдельный файл , класс, таблицу, like a CensureVocabulary.processIt();
    /**
     * Словарь не цензурных слов, все они будут удалены из сообщеий и не отображаются пользователям.
     * @type {string[]}
     */
    var censureVocabulary = [
        'блядина',
        'ебина',
        'охуеть',
        'ахуеть',
        'бля',
        'блять',
        'блядь',
        'бляди',
        'ебать',
        'ебаться',
        'ебанные',
        'ебаные',
        'ебанько',
        'ебать',
        'пизда',
        'пиздабол',
        'хуй',
        'нахуй',
        'апездал',
        'апездошенная',
        'пизды',
        'блядки',
        'блядовать',
        'блядство',
        'блядь',
        'пизде',
        'пизду',
        'взъёбка',
        'впиздячить',
        'нихуя',
        'вхуюжить',
        'вхуярить',
        'вхуячить',
        'выебать',
        'выебон',
        'выёбываться',
        'выпиздеться',
        'выпиздить',
        'гомосек',
        'ебанной',
        'хуя',
        'хуя',
        'доебаться',
        'долбоёб',
        'допиздеться',
        'допизды',
        'дуроёб',
        'ебало',
        'ебальник',
        'ебанатик',
        'ёбанный',
        'ебанутый',
        'ебануть',
        'ёбаный',
        'ебаришка',
        'ёбарь',
        'ебаторий',
        'ебать',
        'ебаться',
        'ебаться',
        'ебистика',
        'ебическая',
        'еблан',
        'ебливая',
        'еблище',
        'ебло',
        'еблом',
        'ёбля',
        'ёбнутый',
        'ёбнуть',
        'ёбнуться',
        'ёболызнуть',
        'ебош',
        'ёбс',
        'еблысь',
        'ебукентий',
        'ебунок',
        'хуйню',
        'заёб',
        'заебал',
        'заёбанный',
        'заебатый',
        'заебать',
        'заебаться',
        'заебись',
        'запиздеть',
        'захуярить',
        'злаебучий',
        'злоебучая',
        'испиздить',
        'исхуячить',
        'колдоебина',
        'коноёбиться',
        'манда',
        'мандовошка',
        'мозгоёб',
        'мокрощелка',
        'мудоёб',
        'хуй',
        'хую',
        'хуя',
        'наебал',
        'наебаловка',
        'наебка',
        'наебнуть',
        'наебнуться',
        'напиздеть',
        'напиздить',
        'настоебать',
        'нахуяриться',
        'нехуй',
        'хуя',
        'однохуйственно',
        'опизденеть',
        'остопиздеть',
        'отебукать',
        'отпиздить',
        'отхуевертить',
        'отъебаться',
        'отъебись',
        'охуевший',
        'охуенно',
        'охуенный',
        'охуеть',
        'охуительный',
        'охуячить',
        'перехуярить',
        'пидарас',
        'пизда',
        'пизданутый',
        'пиздануть',
        'пиздатый',
        'пиздёж',
        'пизденыш',
        'пиздёныш',
        'пиздеть',
        'пиздец',
        'пиздить',
        'пиздобол',
        'пиздобратия',
        'пиздой',
        'пиздолет',
        'пиздорванец',
        'пиздорванка',
        'пиздошить',
        'пиздуй',
        'пиздун',
        'пизды',
        'пиздюк',
        'пиздюлей',
        'пиздюли',
        'пиздюлина',
        'пиздюрить',
        'пиздюхать',
        'пиздюшник',
        'подзалупный',
        'поебать',
        'поебень',
        'поебустика',
        'попиздеть',
        'попиздили',
        'хую',
        'похуярили',
        'приебаться',
        'припиздак',
        'припиздить',
        'прихуярить',
        'проебать',
        'проебаться',
        'пропиздить',
        'разёбанный',
        'разъебай',
        'разъебанный',
        'разъебать',
        'разъебаться',
        'распиздон',
        'распиздяй',
        'распиздяй',
        'расхуюжить',
        'хуеву',
        'хуеву',
        'еби',
        'хуй',
        'спиздить',
        'сука',
        'сучка',
        'схуярить',
        'трахать',
        'хуй',
        'угондошить',
        'уебан',
        'уебать',
        'уебок',
        'уёбывать',
        'упиздить',
        'хитровыебанный',
        'хуй',
        'худоёбина',
        'хуебратия',
        'хуёв',
        'хуеватенький',
        'хуевато',
        'хуевертить',
        'хуёвина',
        'хуёвничать',
        'хуево',
        'хуёво',
        'хуёвый',
        'хуеглот',
        'хуегрыз',
        'хуё',
        'хуемырло',
        'хуеплёт',
        'хуесос',
        'хуета',
        'хуетень',
        'хуеть',
        'хуй',
        'хуила',
        'хуйло',
        'хуйнуть',
        'хуйню',
        'хуйня',
        'хуистика',
        'хуй',
        'хули',
        'хуя',
        'хуяк',
        'хуями',
        'хуячить',
        'членоплет',
        'членосос',
        'шлюха',
        'шобла',
        'ёбла'
    ];

    /**
     * Добавить сообщение в кэш.
     * @param userId {number}
     * @param text {string}
     * @param timestamp {number}
     * @param inDataBase {bool}
     */
    this.add = function (userId, text, timestamp, inDataBase) {
        var message;
        message = {
            userId: userId,
            text: text,
            timestamp: timestamp,
            inDataBase: inDataBase
        };
        cache.push(message);
    };

    /**
     * Вернёт последнии сообщения.
     * Сообщения будут отсортированы по времени.
     * @param count {number} кол-во сообщений.
     * @returns {Array} массив сообщений.
     */
    this.getLastMessages = function (count) {
        var messages;
        messages = cache.slice(-count);
        messages.sort(function (a, b) {
            if (a.id < b.id) return -1;
            if (a.id > b.id) return +1;
            return 0;
        });
        messages.sort(function (a, b) {
            if (a.timestamp < b.timestamp) return -1;
            if (a.timestamp > b.timestamp) return +1;
            return 0;
        });

        return messages;
    };

    /**
     * Вернёт первые сообщения.
     * @param count {number} кол-во сообщений.
     * @returns {Array} массив сообщений.
     */
    this.getFirstMessages = function (count) {
        return cache.slice(0, count);
    };

    /**
     * Возвращает текущий размер кэша.
     * @returns {Number} кол-во сообщений в кэше.
     */
    this.getCacheSize = function () {
        return cache.length;
    };

    /**
     * Обрежет кэш, оставим последние собщения.
     * @param size {number} кол-во сообщний на конце, которые останутся.
     */
    this.sliceCache = function (size) {
        cache = cache.slice(size, cache.length);
    };

    /**
     * Удалить нецензурные слова\выражения.
     * @param text {string}
     */
    this.censureIt = function (text) {
        var word, removeEx, replacer;

        removeEx = new RegExp("([^A-zА-я])" + "(" + censureVocabulary.join('|') + ")+" + "([^A-zА-я])", "gi");
        text = " " + text + " ";
        text = text.replace(removeEx, function () {
            replacer = '';
            if (arguments[1] != undefined) {
                replacer += arguments[1];
            }
            replacer += '*';
            if (arguments[3] != undefined) {
                replacer += arguments[3];
            }
            return replacer;
        });
        text = text.replace(removeEx, function () {
            replacer = '';
            if (arguments[1] != undefined) {
                replacer += arguments[1];
            }
            replacer += '*';
            if (arguments[3] != undefined) {
                replacer += arguments[3];
            }
            return replacer;
        });
        text = text.substr(1, text.length - 2);
        return text;
    }
};

/**
 * Статитечский класс.
 * @type {LogicChatCache}
 */
LogicChatCache = new LogicChatCache();